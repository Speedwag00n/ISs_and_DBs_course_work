CREATE TYPE "OBJECT_STATE" AS ENUM ('IN_STOCK', 'SHARED');
CREATE TYPE STATUS AS ENUM ('OPEN', 'CANCELED', 'RESOLVED');

CREATE TABLE SUGGESTION (
    ID SERIAL PRIMARY KEY,
	NAME VARCHAR(32) NOT NULL CHECK (CHAR_LENGTH(TELEPHONE) >= 6),
	DESCRIPTION VARCHAR(256),
	STATUS STATUS NOT NULL DEFAULT 'OPEN',
	CREATION_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
	AUTHOR INTEGER REFERENCES "USER" (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE SERVICE (
    ID SERIAL PRIMARY KEY,
	NAME VARCHAR(256) NOT NULL CHECK (CHAR_LENGTH(TELEPHONE) >= 6),
	IMAGE (BYTEA),
	USER_ID INTEGER REFERENCES "USER" (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE SERVICE_SUGGESTION (
    ID SERIAL PRIMARY KEY,
	SUGGESTION INTEGER REFERENCES SUGGESTION (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
	SERVICE INTEGER REFERENCES SERVICE (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE "COMMENT" (
    ID SERIAL PRIMARY KEY,
	CREATION_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
	AUTHOR INTEGER REFERENCES "USER" (ID) ON UPDATE CASCADE ON DELETE SET NULL,
	PARENT_COMMENT INTEGER REFERENCES "COMMENT" (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE OFFER_COMMENT (
    ID SERIAL PRIMARY KEY,
	"COMMENT" INTEGER REFERENCES "COMMENT" (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
	OFFER INTEGER REFERENCES OFFER (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE SUGGESTION_COMMENT (
    ID SERIAL PRIMARY KEY,
	"COMMENT" INTEGER REFERENCES "COMMENT" (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
	SUGGESTION INTEGER REFERENCES SUGGESTION (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE REQUEST (
    ID SERIAL PRIMARY KEY,
	NAME VARCHAR(32) NOT NULL CHECK (CHAR_LENGTH(TELEPHONE) >= 6),
	CONTENT VARCHAR(256) NOT NULL,
	AUTHOR INTEGER REFERENCES "USER" (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE OFFER_REQUEST (
    ID SERIAL PRIMARY KEY,
	REQUEST INTEGER REFERENCES REQUEST (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
	SUGGESTION INTEGER REFERENCES SUGGESTION (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE SUGGESTION_REQUEST (
    ID SERIAL PRIMARY KEY,
	REQUEST INTEGER REFERENCES REQUEST (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
	SUGGESTION INTEGER REFERENCES SUGGESTION (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE WHEN_CAN_DO (
    ID SERIAL PRIMARY KEY,
	DATETIME_START TIMESTAMP WITH TIME ZONE NOT NULL,
	DATETIME_END TIMESTAMP WITH TIME ZONE NOT NULL,
	SERVICE_SUGGESTION INTEGER REFERENCES SERVICE_SUGGESTION (ID) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);