CREATE OR REPLACE FUNCTION CHECK_OBJECT_OFFER_STATUS()
    RETURNS TRIGGER AS
$$
DECLARE
    STATE  INTEGER := (SELECT OBJECT_STATE
                       FROM OBJECT
                       WHERE ID = NEW.OBJECT);
    STATUS INTEGER := (SELECT STATUS
                       FROM OFFER
                       WHERE ID = NEW.OFFER);
BEGIN
    IF STATE == 'SHARED' OR STATUS != 'OPEN' THEN
        RETURN NULL;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER CHECK_OBJECT_OFFER_STATUS
    BEFORE INSERT
    ON OBJECT_OFFER_REQUEST
    FOR EACH ROW
EXECUTE PROCEDURE CHECK_OBJECT_OFFER_STATUS();

CREATE OR REPLACE FUNCTION CHECK_SERVICE_OFFER_STATUS()
    RETURNS TRIGGER AS
$$
DECLARE
    STATUS INTEGER := (SELECT STATUS
                       FROM OFFER
                       WHERE ID = NEW.OFFER);
BEGIN
    IF STATUS != 'OPEN' THEN
        RETURN NULL;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER CHECK_SERVICE_OFFER_STATUS
    BEFORE INSERT
    ON SERVICE_OFFER_REQUEST
    FOR EACH ROW
EXECUTE PROCEDURE CHECK_SERVICE_OFFER_STATUS();

CREATE OR REPLACE FUNCTION CHECK_SUGGESTION_STATUS()
    RETURNS TRIGGER AS
$$
DECLARE
    STATUS INTEGER := (SELECT STATUS
                       FROM SUGGESTION
                       WHERE ID = NEW.SUGGESTION);
BEGIN
    IF STATUS != 'OPEN' THEN
        RETURN NULL;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER CHECK_SUGGESTION_STATUS
    BEFORE INSERT
    ON SUGGESTION_REQUEST
    FOR EACH ROW
EXECUTE PROCEDURE CHECK_SUGGESTION_STATUS();

CREATE OR REPLACE FUNCTION CHECK_DORMITORY_FOR_SUGGESTION()
    RETURNS TRIGGER AS
$$
DECLARE
    REQUEST_AUTHOR       INTEGER := (SELECT AUTHOR
                                     FROM REQUEST
                                     WHERE ID = NEW.REQUEST);
    SUGGESTION_AUTHOR    INTEGER := (SELECT AUTHOR
                                     FROM SUGGESTION
                                     WHERE ID = NEW.SUGGESTION);
    REQUEST_DORMITORY    INTEGER := (SELECT DORMITORY
                                     FROM "USER"
                                     WHERE ID = REQUEST_AUTHOR);
    SUGGESTION_DORMITORY INTEGER := (SELECT DORMITORY
                                     FROM "USER"
                                     WHERE ID = SUGGESTION_AUTHOR);
BEGIN
    IF REQUEST_DORMITORY != SUGGESTION_DORMITORY THEN
        RETURN NULL;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER CHECK_DORMITORY_FOR_SUGGESTION
    BEFORE INSERT
    ON SUGGESTION_REQUEST
    FOR EACH ROW
EXECUTE PROCEDURE CHECK_DORMITORY_FOR_SUGGESTION();

CREATE OR REPLACE FUNCTION CHECK_DORMITORY_FOR_SERVICE_OFFER()
    RETURNS TRIGGER AS
$$
DECLARE
    REQUEST_AUTHOR    INTEGER := (SELECT AUTHOR
                                  FROM REQUEST
                                  WHERE ID = NEW.REQUEST);
    OFFER_AUTHOR      INTEGER := (SELECT AUTHOR
                                  FROM OFFER
                                  WHERE ID = NEW.OFFER);
    REQUEST_DORMITORY INTEGER := (SELECT DORMITORY
                                  FROM "USER"
                                  WHERE ID = REQUEST_AUTHOR);
    OFFER_DORMITORY   INTEGER := (SELECT DORMITORY
                                  FROM "USER"
                                  WHERE ID = OFFER_AUTHOR);
BEGIN
    IF REQUEST_DORMITORY != OFFER_DORMITORY THEN
        RETURN NULL;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER CHECK_SERVICE_OFFER_STATUS
    BEFORE INSERT
    ON SERVICE_OFFER_REQUEST
    FOR EACH ROW
EXECUTE PROCEDURE CHECK_DORMITORY_FOR_SERVICE_OFFER();

CREATE OR REPLACE FUNCTION CHECK_DORMITORY_FOR_OBJECT_OFFER()
    RETURNS TRIGGER AS
$$
DECLARE
    REQUEST_AUTHOR    INTEGER := (SELECT AUTHOR
                                  FROM REQUEST
                                  WHERE ID = NEW.REQUEST);
    OFFER_AUTHOR      INTEGER := (SELECT AUTHOR
                                  FROM OFFER
                                  WHERE ID = NEW.OFFER);
    REQUEST_DORMITORY INTEGER := (SELECT DORMITORY
                                  FROM "USER"
                                  WHERE ID = REQUEST_AUTHOR);
    OFFER_DORMITORY   INTEGER := (SELECT DORMITORY
                                  FROM "USER"
                                  WHERE ID = OFFER_AUTHOR);
BEGIN
    IF REQUEST_DORMITORY != OFFER_DORMITORY THEN
        RETURN NULL;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER CHECK_OBJECT_OFFER_STATUS
    BEFORE INSERT
    ON OBJECT_OFFER_REQUEST
    FOR EACH ROW
EXECUTE PROCEDURE CHECK_DORMITORY_FOR_OBJECT_OFFER();